trigger:
  - main

pool:
  name: Teste
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: 'Build'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'
          
          - script: |
              echo 'MONGODB_TEST_URL=$(MONGODB_TEST_URL)' >> .env
              npm install
              npm run build --if-present
            displayName: 'npm install and build'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)
              artifact: build
              publishLocation: pipeline
              artifactName: 'build'

  - stage: Test
    displayName: Test stage
    dependsOn: Build
    jobs:
      - job: UnitTests
        displayName: 'Unit Tests'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build
              path: $(Build.ArtifactStagingDirectory)

          - script: |
              cp $(Build.ArtifactStagingDirectory)/.env $(System.DefaultWorkingDirectory)/.env
              npm install
              npm run test:unit
            displayName: 'Unit tests'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/reports/unit
              artifact: unit-tests
              publishLocation: pipeline

      - job: IntegrationTests
        displayName: 'Integration Tests'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build
              path: $(Build.ArtifactStagingDirectory)

          - script: |
              cp $(Build.ArtifactStagingDirectory)/.env $(System.DefaultWorkingDirectory)/.env
              npm install
              npm run test:integration
            displayName: 'Integration tests'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/reports/integration
              artifact: integration-tests
              publishLocation: pipeline

      - job: E2ETests
        displayName: 'E2E Tests'
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: '18.x'
            displayName: 'Install Node.js'

          - task: DownloadPipelineArtifact@2
            inputs:
              artifact: build
              path: $(Build.ArtifactStagingDirectory)

          - script: |
              cp $(Build.ArtifactStagingDirectory)/.env $(System.DefaultWorkingDirectory)/.env
              npm install
              npm run test:e2e
            displayName: 'E2E tests'
          
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: $(Build.ArtifactStagingDirectory)/reports/e2e
              artifact: e2e-tests
              publishLocation: pipeline
